{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"U",
				"UserProfile\tclass"
			],
			[
				"qu",
				"query"
			],
			[
				"quer",
				"query1"
			],
			[
				"M",
				"MyPutResource\tclass"
			],
			[
				"le",
				"letterCasePermutation"
			],
			[
				"A",
				"AbstractUserAddress\tmodule"
			],
			[
				"STA",
				"STATIC_URL"
			],
			[
				"max_",
				"max_ind1"
			],
			[
				"ma",
				"max_ind"
			],
			[
				"dis",
				"distance"
			],
			[
				"a",
				"accumulate"
			],
			[
				"firs",
				"first_money"
			],
			[
				"not",
				"not_included"
			],
			[
				"api",
				"api_url\tstatement"
			],
			[
				"is",
				"is_proxy_working\tfunction"
			],
			[
				"file",
				"file_obj\tstatement"
			],
			[
				"word",
				"wordcount\tstatement"
			],
			[
				"I",
				"IGNORECASE\tstatement"
			],
			[
				"co",
				"count_island\tstatement"
			],
			[
				"p",
				"prefsum"
			],
			[
				"fac",
				"factorial"
			],
			[
				"solve",
				"solve_maze"
			],
			[
				"sol",
				"solve_maze"
			],
			[
				"pu",
				"published_date\tstatement"
			],
			[
				"s",
				"second"
			],
			[
				"to",
				"towerOfHanoi"
			],
			[
				"pa",
				"parent1"
			],
			[
				"pare",
				"parent1"
			],
			[
				"new",
				"newNode"
			],
			[
				"ad",
				"adjList"
			],
			[
				"de",
				"destination"
			],
			[
				"visit",
				"visited"
			],
			[
				"ds",
				"dfsHelper"
			],
			[
				"dfs",
				"dfsHelper"
			],
			[
				"n",
				"neighbour"
			],
			[
				"e",
				"edgeCost"
			],
			[
				"c",
				"count_distinct"
			],
			[
				"N",
				"neighbour"
			],
			[
				"print",
				"printAdjList"
			],
			[
				"IN",
				"InputStreamReader"
			],
			[
				"re",
				"receivestring"
			],
			[
				"ca",
				"calculate_bill"
			],
			[
				"pr",
				"productName"
			],
			[
				"Y",
				"Ytrain"
			],
			[
				"second",
				"secondpointer"
			],
			[
				"secon",
				"secondpointer"
			],
			[
				"hea",
				"heap_size"
			],
			[
				"in",
				"increase_key"
			],
			[
				"min",
				"build_minheap"
			],
			[
				"heap",
				"heapnode"
			],
			[
				"tuple",
				"tuple_list"
			],
			[
				"tupl",
				"tuple_list"
			],
			[
				"repo_",
				"repo_path"
			],
			[
				"repo",
				"repo_name\tparam"
			],
			[
				"ge",
				"generate"
			],
			[
				"u",
				"updateQuery"
			],
			[
				"en",
				"endswith\tfunction"
			],
			[
				"left",
				"left_end"
			],
			[
				"rih",
				"right_end"
			],
			[
				"r",
				"right_start"
			],
			[
				"lef",
				"left_end"
			],
			[
				"righ",
				"right_end"
			],
			[
				"right",
				"right_start"
			],
			[
				"count",
				"counta"
			],
			[
				"make_",
				"make_set"
			],
			[
				"constr",
				"constructor_ref\tstatement"
			],
			[
				"Nam",
				"NameError\tclass"
			],
			[
				"construct",
				"construct_args\tstatement"
			],
			[
				"na",
				"name_object\tstatement"
			],
			[
				"arg",
				"arg_level_1\tstatement"
			],
			[
				"NO",
				"NodeTransformer\tclass"
			],
			[
				"dum",
				"dump\tfunction"
			],
			[
				"Ca",
				"CascadeClassifier\tfunction"
			],
			[
				"tr",
				"troubleSort\tfunction"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 306.0,
		"last_filter": "sublimeGD",
		"selected_items":
		[
			[
				"sublimeGD",
				"SublimeGDB: Start Debugging"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: my"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 86.0,
		"history":
		[
			"sublime.find_resources('*.sublime-snippet')",
			"sublime.find_resources('c++14.sublime-snippet')",
			"add(2)",
			"add(4)",
			" python def.py",
			"package control ",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/divya/ProHyre/ProHyre/urls.py",
		"/home/divya/ProHyre/app/urls.py",
		"/home/divya/django-resume/django_resume/urls.py",
		"/home/divya/django/blog/forms.py",
		"/home/divya/ProHyre/accounts/templates/signup.html",
		"/home/divya/ProHyre/candidate_resume/models.py",
		"/home/divya/ProHyre/templates/base.html",
		"/home/divya/django/blog/templates/blog/base.html",
		"/home/divya/ProHyre/ProHyre/templates/registration/login.html",
		"/home/divya/ProHyre/templates/home.html",
		"/home/divya/cprogram/hackerearth/April_circuits/grid_phase.cpp",
		"/home/divya/oscar/oscar_assignment/oscar_assignment/urls.py",
		"/home/divya/oscar/oscar_assignment/mycustomapi/models.py",
		"/home/divya/oscar/oscar_assignment/mycustomapi/api/resource.py",
		"/home/divya/oscar/oscar_assignment/mycustomapi/views.py",
		"/home/divya/cprogram/codeforces/B/inna_new_matrix_of_candies.cpp",
		"/home/divya/geekforgeeks/interviewPrep/maths_puzzles/permutation.cpp",
		"/home/divya/geekforgeeks/interviewPrep/maths_puzzles/gcd_lcm.cpp\\",
		"/home/divya/geekforgeeks/interviewPrep/maths_puzzles/gcd_lcm.cpp",
		"/home/divya/geekforgeeks/interviewPrep/maths_puzzles/closet_num.cpp",
		"/home/divya/kickstart/round_a2018/A.cpp",
		"/home/divya/codechef/recursion/fit_squares.cpp",
		"/home/divya/codechef/recursion/Nokia.cpp",
		"/home/divya/oscar/oscar_assignment/customer1/urls.py",
		"/home/divya/oscar/oscar_assignment/customer1/views.py",
		"/home/divya/oscar/oscar_assignment/customer/views.py",
		"/home/divya/oscar/oscar_assignment/customer/urls.py",
		"/home/divya/oscar/oscar_assignment/customer/customer/models.py",
		"/home/divya/oscar/oscar_assignment/requirements.txt",
		"/home/divya/cprogram/codeforces/forethought/A.cpp",
		"/home/divya/cprogram/codeforces/forethought/B.cpp",
		"/home/divya/cprogram/hackerearth/graphs/social_networking_graph.cpp",
		"/home/divya/cprogram/codeforces/new_contest/B.cpp",
		"/home/divya/cprogram/educational_round/A.cpp",
		"/home/divya/geekforgeeks/interviewPrep/maths_puzzles/gcd.cpp",
		"/home/divya/cprogram/educational_round/B.cpp",
		"/home/divya/cprogram/codingblocks/is_cyclic.cpp",
		"/home/divya/cprogram/codingblocks/graphs/adjacency_list.cpp",
		"/home/divya/cprogram/codingblocks/graphs/dijisktra.cpp",
		"/home/divya/cprogram/hackerearth/graphs/number_of_paths.cpp",
		"/home/divya/cprogram/codingblocks/graphs/shortest_distance.cpp",
		"/home/divya/cprogram/hackerearth/graphs/agigated_chandan.cpp",
		"/home/divya/cprogram/interviewbit/dynamic_programming/mins_jump.cpp",
		"/home/divya/cprogram/codeforces/div3/552/A.cpp",
		"/home/divya/cprogram/codeforces/div3/552/B.cpp",
		"/home/divya/cprogram/codeforces/div3/552/C.cpp",
		"/home/divya/cprogram/codeforces/div3/552/D.cpp",
		"/home/divya/cprogram/codeforces/div3/552/1154/d/D.cpp",
		"/home/divya/cprogram/codeforces/div3/552/1154/e/two_teams.cpp",
		"/home/divya/cprogram/codeforces/new_contest/A.cpp",
		"/home/divya/cprogram/codeforces/div3/552/test.cpp",
		"/home/divya/cprogram/hackerearth/graphs/monk_and_the_islands.cpp",
		"/home/divya/cprogram/google/low_high_sorting.cpp",
		"/home/divya/cprogram/codeforces/553/c.cpp",
		"/home/divya/cprogram/codeforces/553/A.cpp",
		"/home/divya/cprogram/codeforces/B/jeff_periods.cpp",
		"/home/divya/cprogram/codeforces/553/B.cpp",
		"/home/divya/Documents/code_jam/B.cpp",
		"/home/divya/cprogram/test.cpp",
		"/home/divya/cprogram/codeforces/B/iou.cpp",
		"/home/divya/cprogram/codeforces/graphs/network_topology.cpp",
		"/home/divya/cprogram/hackerearth/graphs/number_of_paths_dfs.cpp",
		"/home/divya/cprogram/codeforces/B/bear_strings.cpp",
		"/home/divya/cprogram/codeforces/B/roma_changing_signs.cpp",
		"/home/divya/cprogram/codeforces/graphs/bakery.cpp",
		"/home/divya/codechef/long_challenge/friend_girlfriend.cpp",
		"/home/divya/cprogram/codingblocks/graphs/dfs.cpp",
		"/home/divya/cprogram/hackerearth/graphs/test.cpp",
		"/home/divya/cprogram/hackerearth/graphs/14e6a4bce4ad11e7.txt.clean.txt",
		"/home/divya/cprogram/codeforces/551/C.cpp",
		"/home/divya/cprogram/codeforces/B/chocolate.cpp",
		"/home/divya/cprogram/codeforces/C/serval_parenthesis.cpp",
		"/home/divya/cprogram/interviewbit/entrance_test/A.cpp",
		"/home/divya/cprogram/trees/colouring_trees.cpp",
		"/home/divya/cprogram/hackerearth/graphs/oliver_battle.cpp",
		"/home/divya/cprogram/hackerearth/graphs/dhoom.cpp",
		"/home/divya/cprogram/codeforces/551/B1.cpp",
		"/home/divya/cprogram/codeforces/551/B.cpp",
		"/home/divya/cprogram/codeforces/551/A.cpp",
		"/home/divya/cprogram/codeforces/div3/middle_of_contest.cpp",
		"/home/divya/cprogram/hackerearth/graphs/flight_plan.cpp",
		"/home/divya/cprogram/hackerearth/graphs/permutation.cpp",
		"/home/divya/cprogram/codingblocks/graphs/valid_path.cpp",
		"/home/divya/cprogram/codeforces/C/woodcutters.cpp",
		"/home/divya/cprogram/codeforces/B/steps.cpp",
		"/home/divya/cprogram/codeforces/B/regular_bracket.cpp",
		"/home/divya/cprogram/codeforces/C/vacations.cpp",
		"/home/divya/cprogram/hackerearth/hourstorm/a.cpp",
		"/home/divya/cprogram/test_push_back.cpp",
		"/home/divya/Documents/code_jam/A.cpp",
		"/home/divya/cern/zombie.py",
		"/home/divya/cprogram/codeforces/B/find_the_bone.cpp",
		"/home/divya/cprogram/codeforces/B/chat_online.cpp",
		"/home/divya/cprogram/codeforces/B/flya_homework.cpp",
		"/home/divya/cprogram/hackerearth/march_easy/permutation.cpp",
		"/home/divya/cprogram/codeforces/B/dreamon_wifi.cpp",
		"/home/divya/codechef/long_challenge/maximum_remaining.cpp",
		"/home/divya/task3_updated/commands.txt",
		"/home/divya/zombie/out.log",
		"/home/divya/zombie/zombie1/script1.sh",
		"/home/divya/zombie/script.sh",
		"/home/divya/jupyterhub_config.py",
		"/home/divya/cern/Dockerfile",
		"/home/divya/jupyter_config.py",
		"/home/divya/cprogram/codeforces/B/Dreamoon.cpp",
		"/home/divya/cprogram/codeforces/round_540/A.cpp",
		"/home/divya/cprogram/goldman_sachs/attendance.cpp",
		"/home/divya/cprogram/script1.py",
		"/home/divya/test_api/suites/test_api.py",
		"/home/divya/cprogram/string/rolling_string.cpp",
		"/home/divya/cprogram/dp/hackerrank/coin_change.cpp",
		"/home/divya/cprogram/dp/spoj/farida.cpp",
		"/home/divya/cprogram/dp/atcoder/frog.cpp",
		"/home/divya/cprogram/dp/atcoder/vacation.cpp",
		"/home/divya/cprogram/dp/atcoder/knapsack.cpp",
		"/home/divya/cprogram/dp/atcoder/knapsack_atcoder.cpp",
		"/home/divya/cprogram/dp/atcoder/knapsack2.cpp",
		"/home/divya/cprogram/dp/atcoder/lcs.cpp",
		"/home/divya/cprogram/dp/atcoder/longestpath.cpp",
		"/home/divya/cprogram/dp/atcoder/grid.cpp",
		"/home/divya/cprogram/dp/codeforces/max_sum.cpp",
		"/home/divya/cprogram/dp/codeforces/mirai_stones.cpp",
		"/home/divya/cprogram/dp/atcoder/kstones.cpp",
		"/home/divya/cprogram/dp/atcoder/reverse.cpp",
		"/home/divya/cprogram/string/anagram.cpp",
		"/home/divya/cprogram/dp/codeforces/mahmoud_and_longest.cpp",
		"/home/divya/cprogram/dp/codeforces/maximum_increase.cpp",
		"/home/divya/cprogram/codingblocks/graphs/generic_template.cpp"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"signup",
			"];\n",
			"9",
			"int",
			"\n",
			";\n",
			");\n",
			"int",
			");\n",
			"min",
			"remove",
			"]=='?'){",
			"int",
			"\";\n",
			"insert",
			"(){\n",
			"];\n",
			"cout",
			"api_token",
			"create",
			"ISLAND",
			"Island",
			"Islands",
			"Island",
			"islands",
			"Island",
			"Islands",
			"cout",
			"];\n",
			"int",
			";\n",
			"];\n",
			"i",
			";\n",
			"a",
			"int",
			");\n",
			"();\n",
			");\n",
			"dep",
			"arr",
			"g",
			";\n",
			"++;\n",
			";\n",
			");\n",
			"}",
			";\n",
			"l",
			"k",
			"k\n",
			"node\n",
			"node*\n",
			" \n",
			"NULL",
			"cout",
			";\n",
			"arr",
			"A",
			"213",
			"530",
			"791",
			"j",
			"*\n",
			"\")\n",
			"extra",
			"int",
			"System.out.println",
			"return",
			"print",
			"stem",
			"symbols",
			"stem",
			"];\n",
			"damage",
			"power",
			"damage",
			"damage\n",
			"];\n",
			"dict",
			"    $",
			"console",
			"` ",
			"xml-file",
			"form-widgets",
			"file1",
			"file2",
			"file1",
			")",
			"=[]\n",
			"1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"ll",
			"min1",
			"erase",
			"ll",
			"departure",
			"arrival",
			"columnindex",
			"",
			"columnindex",
			"startingrow",
			"A",
			"ll",
			"cout <<",
			"power",
			"d",
			"xmlFile",
			"widgets",
			"xml-file",
			"form-widgets"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/c++14.sublime-build",
	"project": "urls.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 138.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"DEBUG"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
